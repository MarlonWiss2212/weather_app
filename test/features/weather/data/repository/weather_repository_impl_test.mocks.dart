// Mocks generated by Mockito 5.4.4 from annotations
// in weather_app/test/features/weather/data/repository/weather_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_app/core/params/get_weather_with_location_params.dart'
    as _i7;
import 'package:weather_app/core/params/reverse_geocoding_params.dart' as _i9;
import 'package:weather_app/features/weather/data/data_sources/remote/geocoding_service.dart'
    as _i8;
import 'package:weather_app/features/weather/data/data_sources/remote/weather_service.dart'
    as _i5;
import 'package:weather_app/features/weather/data/models/geocoding_models/reverse_geocoding_model.dart'
    as _i4;
import 'package:weather_app/features/weather/data/models/weather_forecast_models/weather_forecast_model.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWeatherForecastModel_1 extends _i1.SmartFake
    implements _i3.WeatherForecastModel {
  _FakeWeatherForecastModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReverseGeocodingModel_2 extends _i1.SmartFake
    implements _i4.ReverseGeocodingModel {
  _FakeReverseGeocodingModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherServiceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherServiceImpl extends _i1.Mock
    implements _i5.WeatherServiceImpl {
  MockWeatherServiceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  _i6.Future<_i3.WeatherForecastModel> getWeatherData(
          {required _i7.GetWeatherWithLocationParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeatherData,
          [],
          {#params: params},
        ),
        returnValue: _i6.Future<_i3.WeatherForecastModel>.value(
            _FakeWeatherForecastModel_1(
          this,
          Invocation.method(
            #getWeatherData,
            [],
            {#params: params},
          ),
        )),
      ) as _i6.Future<_i3.WeatherForecastModel>);
}

/// A class which mocks [GeocodingServiceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeocodingServiceImpl extends _i1.Mock
    implements _i8.GeocodingServiceImpl {
  MockGeocodingServiceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  _i6.Future<_i4.ReverseGeocodingModel> reverseGeocoding(
          {required _i9.ReverseGeocodingParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #reverseGeocoding,
          [],
          {#params: params},
        ),
        returnValue: _i6.Future<_i4.ReverseGeocodingModel>.value(
            _FakeReverseGeocodingModel_2(
          this,
          Invocation.method(
            #reverseGeocoding,
            [],
            {#params: params},
          ),
        )),
      ) as _i6.Future<_i4.ReverseGeocodingModel>);
}
